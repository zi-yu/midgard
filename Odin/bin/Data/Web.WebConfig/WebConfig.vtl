## Copyright (c) Zi-Yu.com - All Rights Reserved
## http://midgard.zi-yu.com/
##
## The use and distribution terms for this software are covered by the
## LGPL (http://opensource.org/licenses/lgpl-license.php).
## By using this software in any fashion, you are agreeing to be bound by
## the terms of this license.
##
## You must not remove this notice, or any other, from this software.
##
## Midgard Interface Generator
##
############################################
#set( $provider = ".MidgardUserProvider")
#set( $offlineModule = ".Modules.OfflineModule")
#set( $authenticateModule = ".Modules.AuthenticateModule")
#set( $languageModule = ".Modules.LanguageModule")
#set( $independentLanguageModule = ".Modules.IndependentLanguageModule")
#set( $exceptionModule = ".Modules.ExceptionModule")
#set( $requestLoggerModule = ".Modules.RequestLoggerModule")
#set( $httpCompressionModule = ".Modules.CompressionModule" )
<?xml version="1.0"?>
<configuration>
#if( $dependencies.HasDependency( "Atlas" ) )
  <configSections>
		<sectionGroup name="system.web.extensions" type="System.Web.Configuration.SystemWebExtensionsSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
			<sectionGroup name="scripting" type="System.Web.Configuration.ScriptingSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
				<section name="scriptResourceHandler" type="System.Web.Configuration.ScriptingScriptResourceHandlerSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false"/>
				<sectionGroup name="webServices" type="System.Web.Configuration.ScriptingWebServicesSectionGroup, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35">
					<section name="jsonSerialization" type="System.Web.Configuration.ScriptingJsonSerializationSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false"/>
					<section name="profileService" type="System.Web.Configuration.ScriptingProfileServiceSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false"/>
					<section name="authenticationService" type="System.Web.Configuration.ScriptingAuthenticationServiceSection, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="false"/>
				</sectionGroup>
			</sectionGroup>
		</sectionGroup>
	</configSections>
#end
	<appSettings>
		<add key="appStatus" value="true" />
	</appSettings>
	<connectionStrings/>
	<system.web>
		<pages>
		  <controls>
			<add namespace="$controlsNamespace" assembly="$assembly" tagPrefix="$prefix"/>
#if( $dependencies.HasDependency( "Atlas" ) )
			<!-- ATLAS -->
			<add tagPrefix="asp" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
			<add namespace="AjaxControlToolkit" assembly="AjaxControlToolkit" tagPrefix="ajaxToolkit"/>
#end
		  </controls>
#if( $dependencies.HasDependency( "Atlas" ) )		  
		  <tagMapping>
				<add tagType="System.Web.UI.WebControls.CompareValidator" mappedTagType="System.Web.UI.Compatibility.CompareValidator, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
				<add tagType="System.Web.UI.WebControls.CustomValidator" mappedTagType="System.Web.UI.Compatibility.CustomValidator, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
				<add tagType="System.Web.UI.WebControls.RangeValidator" mappedTagType="System.Web.UI.Compatibility.RangeValidator, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
				<add tagType="System.Web.UI.WebControls.RegularExpressionValidator" mappedTagType="System.Web.UI.Compatibility.RegularExpressionValidator, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
				<add tagType="System.Web.UI.WebControls.RequiredFieldValidator" mappedTagType="System.Web.UI.Compatibility.RequiredFieldValidator, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
				<add tagType="System.Web.UI.WebControls.ValidationSummary" mappedTagType="System.Web.UI.Compatibility.ValidationSummary, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
			</tagMapping>
#end		    
		</pages>
#if( !$dependencies.HasDependency( "Atlas" ) )
		<compilation debug="true" />
#else
		<compilation debug="true">
			<assemblies>
				<add assembly="System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
				<add assembly="System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Web.Extensions.Design, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</assemblies>
		</compilation>
#end
		<authentication mode="Forms" />
#if( $dependencies.HasDependency( "Providers" ) )
		<membership defaultProvider="Midgard" >
			<providers>
				<add name="Midgard" type="$namespace$provider" />		
			</providers>
		</membership>
#end
#if( $dependencies.HasDependency( "Atlas" ) )
	<httpHandlers>
		<remove verb="*" path="*.asmx"/>
		<add verb="*" path="*.asmx" validate="false" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
		<add verb="GET,HEAD" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" validate="false"/>
	</httpHandlers>
#end
		<httpModules>
#if( $dependencies.HasDependency( "Admin" ) )		
			<add name="OfflineModule" type="$namespace$offlineModule"/>
#end
#if( $dependencies.HasDependency( "Authentication" ) )			
			<add name="AuthenticateModule" type="$namespace$authenticateModule"/>
#end
#if( $dependencies.HasDependency( "I18N" ) )			
			<add name="LanguageModule" type="$namespace$languageModule"/>
#end
#if( $dependencies.HasDependency( "I18N.Independent" ) )			
			<add name="LanguageModule" type="$namespace$independentLanguageModule"/>
#end
#if( $dependencies.HasDependency( "ExceptionLogger" ) )			
			<add name="ExceptionModule" type="$namespace$exceptionModule"/>
#end	
#if( $dependencies.HasDependency( "Web.RequestLogger" ) )			
			<add name="RequestLogger" type="$namespace$requestLoggerModule"/>
#end
#if( $dependencies.HasDependency( "Web.HttpCompression" ) )
			<add name="CompressionModule" type="$namespace$httpCompressionModule"/>
#end
#if( $dependencies.HasDependency( "Atlas" ) )
			<!-- ATLAS -->
			<add name="ScriptModule" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
#end
		</httpModules>
    </system.web>
    
    <system.web.extensions>
		<scripting>
			<webServices></webServices>
		</scripting>
	</system.web.extensions>
	
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
		<modules>
			<add name="ScriptModule" preCondition="integratedMode" type="System.Web.Handlers.ScriptModule, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
		</modules>
		<handlers>
			<remove name="WebServiceHandlerFactory-ISAPI-2.0"/>
			<add name="ScriptHandlerFactory" verb="*" path="*.asmx" preCondition="integratedMode" type="System.Web.Script.Services.ScriptHandlerFactory, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
			<add name="ScriptResource" verb="GET" path="ScriptResource.axd" type="System.Web.Handlers.ScriptResourceHandler, System.Web.Extensions, Version=1.0.61025.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"/>
		</handlers>
	</system.webServer>
	
#if( $dependencies.HasDependency( "Admin" ) ) 
    <location allowOverride="false" path="Admin">
		<system.web>
			<authorization>
				<allow roles="admin"/>
				<deny users="*" />
			</authorization>
		</system.web>
	</location>
#end
</configuration>
